{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://fiber/./src/react/Component/index.js","webpack://fiber/./src/react/createElement/index.js","webpack://fiber/./src/react/index.js","webpack://fiber/./src/react/misc/Arrified/index.js","webpack://fiber/./src/react/misc/DOM/createDOMElement.js","webpack://fiber/./src/react/misc/DOM/index.js","webpack://fiber/./src/react/misc/DOM/updateNodeElement.js","webpack://fiber/./src/react/misc/createReactInstance/index.js","webpack://fiber/./src/react/misc/createStateNode/index.js","webpack://fiber/./src/react/misc/createTaskQueue/index.js","webpack://fiber/./src/react/misc/getRoot/index.js","webpack://fiber/./src/react/misc/getTag/index.js","webpack://fiber/./src/react/misc/index.js","webpack://fiber/./src/react/reconciliation/index.js","webpack://fiber/webpack/bootstrap","webpack://fiber/webpack/runtime/define property getters","webpack://fiber/webpack/runtime/hasOwnProperty shorthand","webpack://fiber/webpack/runtime/make namespace object","webpack://fiber/./src/index.js"],"sourcesContent":["/*\n * @Author: onino\n * @Date: 2022-10-02 12:23:10\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 15:14:58\n * @Description: 请填写简介\n */\n\nimport { scheduleUpdate } from '../reconciliation'\nexport class Component {\n    constructor(props) {\n        this.props = props\n    }\n\n    setState(partialState) {\n        scheduleUpdate(this, partialState)\n    }\n}","/*\n * @Author: onino\n * @Date: 2022-10-02 09:43:51\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 09:44:10\n * @Description: 请填写简介\n */\n/*\n * @Author: onino\n * @Date: 2022-10-01 09:14:16\n * @LastEditors: onino\n * @LastEditTime: 2022-10-01 10:15:32\n * @Description: 创建虚拟 dom\n */\n\n\n/**\n * @description: \n * @param {*} type 类型 text、function\n * @param {*} props { textContent: '123' }\n * @param {array} children 数组  对象父节点的所有子节点\n * @return {*}  标准格式的虚拟 dom\n */\nexport default function createElement(type, props, ...children) {\n     \n    const childElement = [].concat(...children).reduce((result, child) => {\n        // 除去子节点中 值为 false、true、null的\n        if (child != false && child !=true && child != null) {\n            if (child instanceof Object) {\n                result.push(child)\n            } else {\n                // 将不标准的 text 文本 转为 标准的格式\n                result.push(createElement(\"text\", { textContent: child }))\n            }\n        }\n        return result\n    }, [])\n    return {\n        type,\n        // 将根节点的 子节点集合挂载到props上 因为在组件里 是通过 props.children 来获取到子节点的     \n        props: Object.assign({ children: childElement }, props ),\n    }\n}","/*\n * @Author: onino\n * @Date: 2022-10-02 09:42:54\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 12:24:12\n * @Description: 请填写简介\n */\n\nimport createElement from './createElement'\nexport { render } from './reconciliation'\nexport { Component } from './Component'\n\nexport default {\n    createElement,\n\n}","/*\n * @Author: onino\n * @Date: 2022-10-02 10:49:10\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 10:51:21\n * @Description: 请填写简介\n */\n\nconst arrified = arg => Array.isArray(arg) ? arg : [arg]\n\nexport default arrified","/*\n * @Author: onino\n * @Date: 2022-10-02 11:08:36\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 11:09:27\n * @Description: 请填写简介\n */\n/*\n * @Author: onino\n * @Date: 2022-10-01 10:39:24\n * @LastEditors: onino\n * @LastEditTime: 2022-10-01 12:11:14\n * @Description: 创建 dom 节点\n */\n\nimport updateNodeElement from './updateNodeElement';\nexport default function createDOMElement(virtualDOM) {\n\n    let newElement = null;\n    if (virtualDOM.type === 'text') {\n        // 根节点是文本节点\n        newElement = document.createTextNode(virtualDOM.props.textContent)\n    } else {\n        // 根结点是元素节点\n        newElement = document.createElement(virtualDOM.type)\n\n        // 为元素添加属性\n        updateNodeElement(newElement, virtualDOM)\n    }\n\n    return newElement;\n}","/*\n * @Author: onino\n * @Date: 2022-10-02 11:10:31\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 11:11:00\n * @Description: 请填写简介\n */\n\nexport { default as createDOMElement } from \"./createDOMElement\"\nexport { default as updateNodeElement } from './updateNodeElement'","/*\n * @Author: onino\n * @Date: 2022-10-02 11:09:38\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 13:32:49\n * @Description: 请填写简介\n */\n/*\n * @Author: onino\n * @Date: 2022-10-01 10:46:34\n * @LastEditors: onino\n * @LastEditTime: 2022-10-01 13:25:05\n * @Description: 给每个节点添加属性\n */\n\nexport default function updateNodeElement(newElement, virtualDOM, oldVirtualDOM = {}) {\n\n    // 获取节点对应的属性对象\n    const newProps = virtualDOM.props\n    const oldProps = oldVirtualDOM.props || {}\n\n    if (virtualDOM.type === 'text') {\n        if (newProps.textContent !== oldProps.textContent) {\n            // 父级节点不同\n            if (virtualDOM.parent.type !== oldVirtualDOM.parent.type) {\n                virtualDOM.parent.stateNode.appendChild(\n                    document.createTextNode(newProps.textContent)\n                )\n            } else {\n                virtualDOM.parent.stateNode.replaceChild(\n                    document.createTextNode(newProps.textContent),\n                    oldVirtualDOM.stateNode\n                )\n            }\n        }\n        return\n    }\n    Object.keys(newProps).forEach(propName => {\n        // 获取属性值\n        const newPropsValue = newProps[propName]\n        const oldPropsValue = oldProps[propName]\n\n        if(newPropsValue !== oldPropsValue) {\n            // 判断 属性是否是 事件属性 onClick =》 click\n            if (propName.slice(0, 2) === \"on\") {\n                // 事件名称\n                const eventName = propName.toLowerCase().slice(2)\n                // 为元素添加事件\n                newElement.addEventListener(eventName, newPropsValue)\n                // 删除 原有的事件处理函数\n                if (oldPropsValue) {\n                    newElement.removeEventListener(eventName, oldPropsValue)\n                }\n            } else if (propName === 'checked' || propName === 'value') {\n                newElement[propName] = newPropsValue\n            } else if (propName !== 'children') {\n                // children 不是属性 是元素\n                if (propName === 'className') {\n                    newElement.setAttribute('class', newPropsValue)\n                } else {\n                    newElement.setAttribute(propName, newPropsValue)\n                }\n            }\n        }\n        \n    })\n\n    // 判断属性被删除的情况, 防止老的属性 没有被卸载\n    Object.keys(oldProps).forEach(propName => {\n        const newPropsValue = newProps[propName]\n        const oldPropsValue = oldProps[propName]\n        // 某个老的属性 在新的对象中 没有找到 说明该属性被删除了\n        if(!newPropsValue) {\n            if (propName.slice(0,2) === 'on') {\n                const eventName = propName.toLowerCase().slice(2)\n                newElement.removeEventListener(eventName, oldPropsValue)\n            } else if (propName !== 'children') {\n                newElement.removeAttribute(propName)\n            }\n        }\n    })\n}","/*\n * @Author: onino\n * @Date: 2022-10-02 12:29:32\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 12:58:15\n * @Description: 请填写简介\n */\n\n\nexport const createReactInstance = fiber => {\n    let instance = null\n    if (fiber.tag === \"class_component\") {\n        instance = new fiber.type(fiber.props)\n    } else {\n        instance = fiber.type\n    }\n    return instance\n}","/*\n * @Author: onino\n * @Date: 2022-10-02 11:07:13\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 12:32:22\n * @Description: 请填写简介\n */\n\nimport { createDOMElement  } from \"../DOM\"\nimport { createReactInstance } from \"../createReactInstance\"\nconst createStateNode = fiber => {\n    /**\n     *  fiber.tag === \"host_component\" 普通节点\n     */    \n    if (fiber.tag === \"host_component\") {\n        return createDOMElement(fiber)\n    } else {\n        // 处理组件的情况\n        return createReactInstance(fiber)\n    }\n}\n\nexport default createStateNode","/*\n * @Author: onino\n * @Date: 2022-10-02 10:10:06\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 10:27:39\n * @Description: 请填写简介\n */\n\n\nconst createTaskQueue = () => {\n    const taskQueue = []\n    return {\n        /**\n         * 向任务队列中添加任务\n         */        \n        push: item => taskQueue.push(item),\n        /**\n         * 从任务队列中获取任务\n         */        \n        pop: () => taskQueue.shift(),\n        /**\n         * 判断任务队列中是否有任务\n         */   \n        isEmpty: () => taskQueue.length === 0   \n\n    }\n}\n\nexport default createTaskQueue","/*\n * @Author: onino\n * @Date: 2022-10-02 15:23:48\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 15:26:18\n * @Description: 请填写简介\n */\n\nconst getRoot = instance => {\n\n    let fiber = instance.__fiber\n    while (fiber.parent) {\n        fiber = fiber.parent\n    }\n    return fiber\n}\n\nexport default getRoot","/*\n * @Author: onino\n * @Date: 2022-10-02 11:17:08\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 12:54:27\n * @Description: 请填写简介\n */\n\nimport { Component } from \"../../Component\"\nconst getTag = vdom => {\n    if (typeof vdom.type === 'string') {\n        return \"host_component\"\n    } else if (Object.getPrototypeOf(vdom.type) === Component) {\n        return \"class_component\"\n    } else {\n        return \"function_component\"\n    }\n}\n\nexport default getTag","/*\n * @Author: onino\n * @Date: 2022-10-02 10:13:11\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 15:25:29\n * @Description: 请填写简介\n */\n\nexport { default as createTaskQueue } from './createTaskQueue'\nexport { default as arrified } from './Arrified'\nexport { default as createStateNode } from './createStateNode'\nexport { default as getTag } from './getTag'\nexport { default as getRoot } from './getRoot'","/*\n * @Author: onino\n * @Date: 2022-10-02 09:46:29\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 15:50:28\n * @Description: 请填写简介\n */\n\nimport { createTaskQueue, arrified, createStateNode, getTag, getRoot } from \"../misc\"\nimport { updateNodeElement } from \"../misc/DOM\"\n\n/**\n *  任务队列\n */\nconst taskQueue = createTaskQueue()\n/**\n * 要执行的子任务\n */\nlet subTask = null\n\nlet pendingCommit = null\n\nconst commitAllWork = fiber => {\n    /**\n     * 循环 effects 数组 构建 DOM 节点树\n     */\n    // 初始渲染\n    fiber.effects.forEach(item => {\n        if (item.tag === \"class_component\") {\n            item.stateNode.__fiber = item\n        }\n        if (item.effectTag === 'delete') {\n            item.parent.stateNode.removeChild(item.stateNode)\n        } else if (item.effectTag === 'update') {\n            /**\n             * 更新\n             */            \n            if (item.type === item.alternate.type) {\n                /**\n                 *  节点类型相同\n                 */   \n                updateNodeElement(item.stateNode, item, item.alternate)\n            } else {\n                /**\n                 * 节点类型不同\n                 */  \n                item.parent.stateNode.replaceChild(\n                    item.stateNode,\n                    item.alternate.stateNode\n                )              \n            }\n        } else if (item.effectTag === 'placement') {\n            /**\n             * 向页面中追加节点\n             * 当前要追加的子节点\n             */            \n            let fiber = item\n            /**\n             * 当前要追加的子节点的父级\n             */            \n            let parentFiber = item.parent\n            /**\n             * 找到普通节点父级 赔出组件父级\n             * 因为组件父级时不能直接追加真实 DOM 节点的\n             */            \n            while (\n                parentFiber.tag === \"class_component\" || \n                parentFiber.tag === \"function_component\"\n            ) {\n                parentFiber = parentFiber.parent\n            }\n            /**\n             * 如果子节点是普通节点 找到父级 将子节点追加到父级中\n             */            \n            if(fiber.tag === \"host_component\") {\n                parentFiber.stateNode.appendChild(fiber.stateNode)\n            }\n        }\n    })\n    /**\n     *  备份旧的 fiber 节点对象\n     */    \n    fiber.stateNode.__rootFibercontainer = fiber\n}\n\nconst getFirstTask = () => {\n    /**\n     * 从任务队列中获取任务\n     */    \n    const task = taskQueue.pop()\n\n    if (task.from === \"class_component\") {\n        const root = getRoot(task.instance)\n        task.instance.__fiber.partialState = task.partialState\n        return {\n            props: root.props,\n            stateNode: root.stateNode,\n            tag: \"host_root\",\n            effects: [],\n            child: null,\n            alternate: root\n        }\n    }\n    /**\n     * 返回最外层节点的fiber 对象\n     */    \n    return {\n        props: task.props,\n        stateNode: task.dom,\n        tag: \"host_root\",\n        effects: [],\n        child: null,\n        alternate: task.dom.__rootFibercontainer\n    }\n}\n\nconst reconcileChildren = (fiber, children) => {\n    /**\n    * children 可能对象 也可能是数组\n    * 将 children 转换成数组\n    */\n\n\n    const arrifiedChildren = arrified(children)\n    /**\n     * 循环 childrend 使用的索引\n     */    \n    let index = 0\n    /**\n     * children 数组中元素的个数\n     */    \n    let numberOfElements = arrifiedChildren.length\n    /**\n     * 循环过程中的循环项 就是子节点的 virtualDOM 对象\n     */    \n    let element = null\n    /**\n     * 子级 fiber 对象\n     */    \n    let newFiber = null\n    /**\n     * 上一个兄弟 fiber 对象\n     */    \n    let prevFiber = null\n    let alternate = null\n\n    if (fiber.alternate && fiber.alternate.child) {\n        alternate = fiber.alternate.child\n    }\n\n    while (index < numberOfElements || alternate) {\n        /**\n         * 子级 virtual DOM 对象\n         */        \n        element = arrifiedChildren[index]\n\n        if (!element && alternate) {\n            /**\n             *  删除节点\n             */  \n            alternate.effectTag = \"delete\"   \n            fiber.effects.push(alternate)       \n        } else if (element && alternate) {\n            /**\n             * 更新\n             */            \n            newFiber = {\n                type: element.type,\n                props: element.props,\n                tag: getTag(element),\n                effects: [],\n                effectTag: \"update\",\n                stateNode: null,\n                parent: fiber,\n                alternate\n            }\n            if (element.type === alternate.type) {\n                /**\n                 * 类型相同\n                 */                \n                newFiber.stateNode = alternate.stateNode\n            } else {\n                /**\n                 * 类型不同\n                 */                \n                newFiber.stateNode = createStateNode(newFiber)\n            }\n        } else if (element && !alternate) {\n            /**\n             * 初始渲染\n             * 子级 fiber 对象\n             */            \n            newFiber = {\n                type: element.type,\n                props: element.props,\n                tag: getTag(element),\n                effects: [],\n                effectTag: \"placement\",\n                stateNode: null,\n                parent: fiber,\n            }\n            /**\n             * 为 fiber 节点添加 DOM 对象或组件的实例对象\n             */            \n            newFiber.stateNode = createStateNode(newFiber)\n        }\n\n        // 为父级 fiber 添加 子级 fiber\n        if (index == 0) {\n            fiber.child = newFiber\n        } else if (element) {\n            // 为 fiber 添加下一个兄弟 fiber\n            prevFiber.sibling = newFiber\n        }\n        \n        if (alternate && alternate.sibling) {\n            alternate = alternate.sibling\n        } else {\n            alternate = null\n        }\n\n        prevFiber = newFiber\n\n        index++\n    }\n\n}\n\n/**\n * @description: 查找节点函数\n * @param {*} fiber\n * @return {*}\n */\nconst executeTask = fiber => {\n\n    /**\n     * 构建子级 fiber 对象\n     */    \n    if (fiber.tag === \"class_component\") {\n        // 更新state\n        if (fiber.stateNode.__fiber && fiber.stateNode.__fiber.partialState) {\n            fiber.stateNode.state = {\n                ... fiber.stateNode.state,\n                ...fiber.stateNode.__fiber.partialState\n            }\n        }\n        reconcileChildren(fiber, fiber.stateNode.render())\n    } else if (fiber.tag === \"function_component\") {\n        reconcileChildren(fiber, fiber.stateNode(fiber.props))\n    } else {\n        reconcileChildren(fiber, fiber.props.children)\n    }\n\n    /**\n     * 构建左侧节点的 fiber 对象\n     * 如果子级存在 返回子级\n     * 将这个子级当作父级 构建这个父级下的子级\n     */    \n    if (fiber.child) {\n        return fiber.child\n    }\n\n    /**\n     * 如果存在同级 返回同级 构建同级的子级\n     * 如果同级不存在 返回父级 看父级是否有同级\n     */    \n    let currentExecutelyFiber = fiber\n    \n    while (currentExecutelyFiber.parent) {\n        // 最外层的effects 就会有所有的 fiber 对象\n        currentExecutelyFiber.parent.effects = currentExecutelyFiber.parent.effects.concat(\n            currentExecutelyFiber.effects.concat([currentExecutelyFiber])\n        )\n        if (currentExecutelyFiber.sibling) {\n            return currentExecutelyFiber.sibling\n        }\n        currentExecutelyFiber = currentExecutelyFiber.parent\n    }\n\n    pendingCommit = currentExecutelyFiber\n    // console.log(currentExecutelyFiber) // 最外层节点\n\n}\n\nconst workLoop = deadline => {\n    /**\n     * 如果子任务不存在 就去获取子任务\n     */    \n    if (!subTask) {\n        subTask = getFirstTask()\n    }\n    /**\n     * 如果任务存在 并且浏览器有空余时间 就调用\n     * excuteTask 方法执行任务 接收任务 返回新任务\n     */    \n    while (subTask && deadline.timeRemaining() > 1) {\n        subTask = executeTask(subTask)\n    }\n    if (pendingCommit) {\n        commitAllWork(pendingCommit)\n    } \n}\n\nconst performTask = deadline => {\n    /**\n     * 执行任务\n     */    \n    workLoop(deadline)\n    /**\n     * 判断任务是否存在\n     * 判断任务队列中是否还有任务没有执行\n     * 再次告诉浏览器在空闲的时间执行任务\n     */    \n    if (subTask || !taskQueue.isEmpty()) {\n        requestIdleCallback(performTask)\n    }\n}\nexport const render = (element, dom) => {\n    /**\n     * 1、向任务队列中添加任务 \n     *  2、 指定在浏览器空闲时执行任务\n     */   \n    \n    /**\n     * 任务就是 通过 vdom 对象 构建 fiber 对象\n     */    \n    taskQueue.push({\n        dom, // root\n        props: { children: element }\n    })\n    /**\n     * \n     */    \n    requestIdleCallback(performTask)\n}\n\n/**\n * state 更改时 调用该方法 创建任务 执行更新操作\n */\nexport const scheduleUpdate = (instance, partialState) => {\n    taskQueue.push({\n        from: \"class_component\",\n        instance,\n        partialState\n    })\n    requestIdleCallback(performTask)\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * @Author: onino\n * @Date: 2022-10-02 09:15:31\n * @LastEditors: onino\n * @LastEditTime: 2022-10-02 15:14:41\n * @Description: 请填写简介\n */\nimport React, { render, Component } from './react'\n\nconst root = document.getElementById('root')\n// const jsx = (\n//     <div>\n//         <p>Hello React</p>\n//         <p>Hello fiber</p>\n//     </div>\n// )\n// render(jsx, root)\n\n// setTimeout(() => {\n//     const jsx = (\n//         <div>\n//             <div>奥利给</div>\n//             {/* <p>Hello fiber</p> */}\n//         </div>\n//     )\n//     render(jsx, root)\n// }, 2000)\n\nclass Greating extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: \"张三\"\n        }\n    }\n\n    render() {\n        console.log(38, this.state)\n        return (\n            <div>\n                {this.props.title}\n                hahahaha \n                {this.state.name}\n                <button onClick={() => this.setState({ name: \"李四\" })}>button</button>\n            </div>\n        )\n    }\n}\nrender(<Greating title=\"奥利给\" />, root)\n\n// function FnComponent(props) {\n//     return <div> {props.title} Fncomponent</div>\n// }\n\n// render(<FnComponent title=\"hello \" />, root)\n"],"names":["scheduleUpdate","Component","props","partialState","createElement","type","children","childElement","concat","reduce","result","child","Object","push","textContent","assign","render","arrified","arg","Array","isArray","updateNodeElement","createDOMElement","virtualDOM","newElement","document","createTextNode","default","oldVirtualDOM","newProps","oldProps","parent","stateNode","appendChild","replaceChild","keys","forEach","propName","newPropsValue","oldPropsValue","slice","eventName","toLowerCase","addEventListener","removeEventListener","setAttribute","removeAttribute","createReactInstance","fiber","instance","tag","createStateNode","createTaskQueue","taskQueue","item","pop","shift","isEmpty","length","getRoot","__fiber","getTag","vdom","getPrototypeOf","subTask","pendingCommit","commitAllWork","effects","effectTag","removeChild","alternate","parentFiber","__rootFibercontainer","getFirstTask","task","from","root","dom","reconcileChildren","arrifiedChildren","index","numberOfElements","element","newFiber","prevFiber","sibling","executeTask","state","currentExecutelyFiber","workLoop","deadline","timeRemaining","performTask","requestIdleCallback","React","getElementById","Greating","name","console","log","title","setState"],"sourceRoot":""}